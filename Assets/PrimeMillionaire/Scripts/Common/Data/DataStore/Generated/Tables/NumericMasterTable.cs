// <auto-generated />
#pragma warning disable CS0105
using MasterMemory.Validation;
using MasterMemory;
using MessagePack;
using PrimeMillionaire.Common.Data.DataStore;
using System.Collections.Generic;
using System;

namespace PrimeMillionaire.Common.Data.DataStore.Tables
{
   public sealed partial class NumericMasterTable : TableBase<NumericMaster>, ITableUniqueValidate
   {
        public Func<NumericMaster, int> PrimaryKeySelector => primaryIndexSelector;
        readonly Func<NumericMaster, int> primaryIndexSelector;


        public NumericMasterTable(NumericMaster[] sortedData)
            : base(sortedData)
        {
            this.primaryIndexSelector = x => x.Value;
            OnAfterConstruct();
        }

        partial void OnAfterConstruct();


        public RangeView<NumericMaster> FindByValue(int key)
        {
            return FindManyCore(data, primaryIndexSelector, System.Collections.Generic.Comparer<int>.Default, key);
        }

        public RangeView<NumericMaster> FindClosestByValue(int key, bool selectLower = true)
        {
            return FindManyClosestCore(data, primaryIndexSelector, System.Collections.Generic.Comparer<int>.Default, key, selectLower);
        }

        public RangeView<NumericMaster> FindRangeByValue(int min, int max, bool ascendant = true)
        {
            return FindManyRangeCore(data, primaryIndexSelector, System.Collections.Generic.Comparer<int>.Default, min, max, ascendant);
        }


        void ITableUniqueValidate.ValidateUnique(ValidateResult resultSet)
        {
#if !DISABLE_MASTERMEMORY_VALIDATOR


#endif
        }

#if !DISABLE_MASTERMEMORY_METADATABASE

        public static MasterMemory.Meta.MetaTable CreateMetaTable()
        {
            return new MasterMemory.Meta.MetaTable(typeof(NumericMaster), typeof(NumericMasterTable), "NumericMaster",
                new MasterMemory.Meta.MetaProperty[]
                {
                    new MasterMemory.Meta.MetaProperty(typeof(NumericMaster).GetProperty("Value")),
                    new MasterMemory.Meta.MetaProperty(typeof(NumericMaster).GetProperty("Bonus")),
                },
                new MasterMemory.Meta.MetaIndex[]{
                    new MasterMemory.Meta.MetaIndex(new System.Reflection.PropertyInfo[] {
                        typeof(NumericMaster).GetProperty("Value"),
                    }, true, false, System.Collections.Generic.Comparer<int>.Default),
                });
        }

#endif
    }
}