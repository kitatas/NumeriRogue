// <auto-generated />
#pragma warning disable CS0105
using MasterMemory.Validation;
using MasterMemory;
using MessagePack;
using PrimeMillionaire.Common.Data.DataStore;
using System.Collections.Generic;
using System;
using UnityEngine;

namespace PrimeMillionaire.Common.Data.DataStore.Tables
{
   public sealed partial class SkillMasterTable : TableBase<SkillMaster>, ITableUniqueValidate
   {
        public Func<SkillMaster, int> PrimaryKeySelector => primaryIndexSelector;
        readonly Func<SkillMaster, int> primaryIndexSelector;


        public SkillMasterTable(SkillMaster[] sortedData)
            : base(sortedData)
        {
            this.primaryIndexSelector = x => x.Level;
            OnAfterConstruct();
        }

        partial void OnAfterConstruct();


        public RangeView<SkillMaster> FindByLevel(int key)
        {
            return FindManyCore(data, primaryIndexSelector, System.Collections.Generic.Comparer<int>.Default, key);
        }

        public RangeView<SkillMaster> FindClosestByLevel(int key, bool selectLower = true)
        {
            return FindManyClosestCore(data, primaryIndexSelector, System.Collections.Generic.Comparer<int>.Default, key, selectLower);
        }

        public RangeView<SkillMaster> FindRangeByLevel(int min, int max, bool ascendant = true)
        {
            return FindManyRangeCore(data, primaryIndexSelector, System.Collections.Generic.Comparer<int>.Default, min, max, ascendant);
        }


        void ITableUniqueValidate.ValidateUnique(ValidateResult resultSet)
        {
#if !DISABLE_MASTERMEMORY_VALIDATOR


#endif
        }

#if !DISABLE_MASTERMEMORY_METADATABASE

        public static MasterMemory.Meta.MetaTable CreateMetaTable()
        {
            return new MasterMemory.Meta.MetaTable(typeof(SkillMaster), typeof(SkillMasterTable), "SkillMaster",
                new MasterMemory.Meta.MetaProperty[]
                {
                    new MasterMemory.Meta.MetaProperty(typeof(SkillMaster).GetProperty("Level")),
                    new MasterMemory.Meta.MetaProperty(typeof(SkillMaster).GetProperty("Type")),
                    new MasterMemory.Meta.MetaProperty(typeof(SkillMaster).GetProperty("Min")),
                    new MasterMemory.Meta.MetaProperty(typeof(SkillMaster).GetProperty("Max")),
                },
                new MasterMemory.Meta.MetaIndex[]{
                    new MasterMemory.Meta.MetaIndex(new System.Reflection.PropertyInfo[] {
                        typeof(SkillMaster).GetProperty("Level"),
                    }, true, false, System.Collections.Generic.Comparer<int>.Default),
                });
        }

#endif
    }
}